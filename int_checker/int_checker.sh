#!/bin/bash

RANGE="6-16"
FILE="flt.txt"
TIME_OUT=10
INTERFACE="enp4s0f1"
INTERVAL=2

# Parse parameters
for i in "$@"
do
case $i in
    -r=*|--range=*) # day time range
    	RANGE="${i#*=}"
    	shift 
    	;;
    -f=*|--flt-file=*) # filter
    	FILE="${i#*=}"
    	shift 
    	;;
    -t=*|--timeout=*) # tcpdump timeout
    	TIME_OUT="${i#*=}"
    	shift 
    	;;
    -i=*|--interface=*) # interface
    	INTERFACE="${i#*=}"
    	shift 
    	;;
    -d=*|--interval=*) # interval in hours
    	INTERVAL="${i#*=}"
    	shift 
    	;;
    -m=*|--mails=*) # list of emails
    	MAILS="${i#*=}"
    	shift 
    	;;
    *)
        echo "unknown option"
		exit 1
    ;;
esac
done

while :
do
	send_mail=false
	message=""
	hour=$(expr $(date +"%H") - 0)
	
	# Check time
	if (($hour >= $(echo $RANGE | awk -F- '{print $1}') && $hour <= $(echo $RANGE | awk -F- '{print $2}') && 5 <= $(date +"%u"))); then
		# Reading each line
		while read line; do
			line_arr=($line)
			# Capture packets
			sudo timeout $TIME_OUT tcpdump -s 1 -w /tmp/${line_arr[0]}.pcap -i $INTERFACE src ${line_arr[0]} and dst port ${line_arr[1]} 2> /dev/null
			pkt_num=$(tcpdump -r /tmp/${line_arr[0]}.pcap 2>/dev/null| wc -l)
			# Check pcap
			host_status="OK"
			if (($pkt_num == 0)); then 
				send_mail=true
				host_status="FAIL"
			fi
			# Construct message
			message="${message}host: ${line_arr[0]}, port: ${line_arr[1]}, send: $(expr $pkt_num / $(expr $TIME_OUT - 2)) pps, status: $host_status\n"		
		done < $FILE

		# Send mails only on failure
		if $send_mail; then
			message="${message}\n\nThis is an automatically generated email. (generated by $(ifconfig $INTERFACE | awk '/inet / {print $6}'))"
			echo -e $message | mail -a "From: Sink" -s "Sink traffic report" $MAILS
		fi
	fi
	# Wait for interval	
	sleep ${INTERVAL}h
done
